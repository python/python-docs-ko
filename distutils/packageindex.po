# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-26 11:10+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/distutils/packageindex.rst:9
msgid "The Python Package Index (PyPI)"
msgstr ""

#: ../Doc/distutils/packageindex.rst:11
msgid ""
"The `Python Package Index (PyPI)`_ stores :ref:`meta-data <meta-data>` "
"describing distributions packaged with distutils, as well as package data"
" like distribution files if a package author wishes."
msgstr ""

#: ../Doc/distutils/packageindex.rst:15
msgid ""
"Distutils provides the :command:`register` and :command:`upload` commands"
" for pushing meta-data and distribution files to PyPI, respectively.  See"
" :ref:`package-commands` for information on these commands."
msgstr ""

#: ../Doc/distutils/packageindex.rst:21
msgid "PyPI overview"
msgstr ""

#: ../Doc/distutils/packageindex.rst:23
msgid ""
"PyPI lets you submit any number of versions of your distribution to the "
"index. If you alter the meta-data for a particular version, you can "
"submit it again and the index will be updated."
msgstr ""

#: ../Doc/distutils/packageindex.rst:27
msgid ""
"PyPI holds a record for each (name, version) combination submitted.  The "
"first user to submit information for a given name is designated the Owner"
" of that name.  Changes can be submitted through the :command:`register` "
"command or through the web interface.  Owners can designate other users "
"as Owners or Maintainers.  Maintainers can edit the package information, "
"but not designate new Owners or Maintainers."
msgstr ""

#: ../Doc/distutils/packageindex.rst:34
msgid ""
"By default PyPI displays only the newest version of a given package.  The"
" web interface lets one change this default behavior and manually select "
"which versions to display and hide."
msgstr ""

#: ../Doc/distutils/packageindex.rst:38
msgid ""
"For each version, PyPI displays a home page.  The home page is created "
"from the ``long_description`` which can be submitted via the "
":command:`register` command.  See :ref:`package-display` for more "
"information."
msgstr ""

#: ../Doc/distutils/packageindex.rst:46
msgid "Distutils commands"
msgstr ""

#: ../Doc/distutils/packageindex.rst:48
msgid ""
"Distutils exposes two commands for submitting package data to PyPI: the "
":ref:`register <package-register>` command for submitting meta-data to "
"PyPI and the :ref:`upload <package-upload>` command for submitting "
"distribution files.  Both commands read configuration data from a special"
" file called a :ref:`.pypirc file <pypirc>`."
msgstr ""

#: ../Doc/distutils/packageindex.rst:58
msgid "The ``register`` command"
msgstr ""

#: ../Doc/distutils/packageindex.rst:60
msgid ""
"The distutils command :command:`register` is used to submit your "
"distribution's meta-data to an index server. It is invoked as follows::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:65
msgid "Distutils will respond with the following prompt::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:75
msgid ""
"Note: if your username and password are saved locally, you will not see "
"this menu.  Also, refer to :ref:`pypirc` for how to store your "
"credentials in a :file:`.pypirc` file."
msgstr ""

#: ../Doc/distutils/packageindex.rst:79
msgid ""
"If you have not registered with PyPI, then you will need to do so now. "
"You should choose option 2, and enter your details as required. Soon "
"after submitting your details, you will receive an email which will be "
"used to confirm your registration."
msgstr ""

#: ../Doc/distutils/packageindex.rst:84
msgid ""
"Once you are registered, you may choose option 1 from the menu. You will "
"be prompted for your PyPI username and password, and :command:`register` "
"will then submit your meta-data to the index."
msgstr ""

#: ../Doc/distutils/packageindex.rst:88
msgid ""
"See :ref:`package-cmdoptions` for options to the :command:`register` "
"command."
msgstr ""

#: ../Doc/distutils/packageindex.rst:94
msgid "The ``upload`` command"
msgstr ""

#: ../Doc/distutils/packageindex.rst:96
msgid ""
"The distutils command :command:`upload` pushes the distribution files to "
"PyPI."
msgstr ""

#: ../Doc/distutils/packageindex.rst:98
msgid ""
"The command is invoked immediately after building one or more "
"distribution files.  For example, the command ::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:103
msgid ""
"will cause the source distribution and the Windows installer to be "
"uploaded to PyPI.  Note that these will be uploaded even if they are "
"built using an earlier invocation of :file:`setup.py`, but that only "
"distributions named on the command line for the invocation including the "
":command:`upload` command are uploaded."
msgstr ""

#: ../Doc/distutils/packageindex.rst:108
msgid ""
"If a :command:`register` command was previously called in the same "
"command, and if the password was entered in the prompt, :command:`upload`"
" will reuse the entered password.  This is useful if you do not want to "
"store a password in clear text in a :file:`.pypirc` file."
msgstr ""

#: ../Doc/distutils/packageindex.rst:113
msgid ""
"You can use the ``--sign`` option to tell :command:`upload` to sign each "
"uploaded file using GPG (GNU Privacy Guard).  The  :program:`gpg` program"
" must be available for execution on the system :envvar:`PATH`.  You can "
"also specify which key to use for signing using the ``--identity=name`` "
"option."
msgstr ""

#: ../Doc/distutils/packageindex.rst:118
msgid ""
"See :ref:`package-cmdoptions` for additional options to the "
":command:`upload` command."
msgstr ""

#: ../Doc/distutils/packageindex.rst:125
msgid "Additional command options"
msgstr ""

#: ../Doc/distutils/packageindex.rst:127
msgid ""
"This section describes options common to both the :command:`register` and"
" :command:`upload` commands."
msgstr ""

#: ../Doc/distutils/packageindex.rst:130
msgid ""
"The ``--repository`` or ``-r`` option lets you specify a PyPI server "
"different from the default.  For example::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:135
msgid ""
"For convenience, a name can be used in place of the URL when the "
":file:`.pypirc` file is configured to do so.  For example::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:140
msgid "See :ref:`pypirc` for more information on defining alternate servers."
msgstr ""

#: ../Doc/distutils/packageindex.rst:142
msgid ""
"The ``--show-response`` option displays the full response text from the "
"PyPI server, which is useful when debugging problems with registering and"
" uploading."
msgstr ""

#: ../Doc/distutils/packageindex.rst:153
msgid "The ``.pypirc`` file"
msgstr ""

#: ../Doc/distutils/packageindex.rst:155
msgid ""
"The :command:`register` and :command:`upload` commands both check for the"
" existence of a :file:`.pypirc` file at the location "
":file:`$HOME/.pypirc`. If this file exists, the command uses the "
"username, password, and repository URL configured in the file.  The "
"format of a :file:`.pypirc` file is as follows:"
msgstr ""

#: ../Doc/distutils/packageindex.rst:172
msgid ""
"The *distutils* section defines an *index-servers* variable that lists "
"the name of all sections describing a repository."
msgstr ""

#: ../Doc/distutils/packageindex.rst:175
msgid "Each section describing a repository defines three variables:"
msgstr ""

#: ../Doc/distutils/packageindex.rst:177
msgid "*repository*, that defines the url of the PyPI server. Defaults to"
msgstr ""

#: ../Doc/distutils/packageindex.rst:178
msgid "``https://upload.pypi.org/legacy/``."
msgstr ""

#: ../Doc/distutils/packageindex.rst:179
msgid "*username*, which is the registered username on the PyPI server."
msgstr ""

#: ../Doc/distutils/packageindex.rst:181
msgid "*password*, that will be used to authenticate. If omitted the user"
msgstr ""

#: ../Doc/distutils/packageindex.rst:181
msgid "will be prompt to type it when needed."
msgstr ""

#: ../Doc/distutils/packageindex.rst:183
msgid ""
"If you want to define another server a new section can be created and "
"listed in the *index-servers* variable:"
msgstr ""

#: ../Doc/distutils/packageindex.rst:203
msgid ""
"This allows the :command:`register` and :command:`upload` commands to be "
"called with the ``--repository`` option as described in :ref:`package-"
"cmdoptions`."
msgstr ""

#: ../Doc/distutils/packageindex.rst:207
msgid ""
"Specifically, you might want to add the `PyPI Test Repository "
"<https://wiki.python.org/moin/TestPyPI>`_ to your ``.pypirc`` to "
"facilitate testing before doing your first upload to ``PyPI`` itself."
msgstr ""

#: ../Doc/distutils/packageindex.rst:215
msgid "PyPI package display"
msgstr ""

#: ../Doc/distutils/packageindex.rst:217
msgid ""
"The ``long_description`` field plays a special role at PyPI. It is used "
"by the server to display a home page for the registered package."
msgstr ""

#: ../Doc/distutils/packageindex.rst:220
msgid ""
"If you use the `reStructuredText "
"<http://docutils.sourceforge.net/rst.html>`_ syntax for this field, PyPI "
"will parse it and display an HTML output for the package home page."
msgstr ""

#: ../Doc/distutils/packageindex.rst:224
msgid ""
"The ``long_description`` field can be attached to a text file located in "
"the package::"
msgstr ""

#: ../Doc/distutils/packageindex.rst:235
msgid ""
"In that case, :file:`README.txt` is a regular reStructuredText text file "
"located in the root of the package besides :file:`setup.py`."
msgstr ""

#: ../Doc/distutils/packageindex.rst:238
msgid ""
"To prevent registering broken reStructuredText content, you can use the "
":program:`rst2html` program that is provided by the :mod:`docutils` "
"package and check the ``long_description`` from the command line:"
msgstr ""

#: ../Doc/distutils/packageindex.rst:246
msgid ""
":mod:`docutils` will display a warning if there's something wrong with "
"your syntax.  Because PyPI applies additional checks (e.g. by passing "
"``--no-raw`` to ``rst2html.py`` in the command above), being able to run "
"the command above without warnings does not guarantee that PyPI will "
"convert the content successfully."
msgstr ""

#~ msgid ""
#~ "The :command:`register` and :command:`upload` "
#~ "commands both check for the existence"
#~ " of a :file:`.pypirc` file at the "
#~ "location :file:`$HOME/.pypirc`. If this file"
#~ " exists, the command uses the "
#~ "username, password, and repository URL "
#~ "configured in the file.  The format "
#~ "of a :file:`.pypirc` file is as "
#~ "follows::"
#~ msgstr ""

#~ msgid ""
#~ "If you want to define another "
#~ "server a new section can be "
#~ "created and listed in the *index-"
#~ "servers* variable::"
#~ msgstr ""

