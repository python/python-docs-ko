# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "대화형 입력 편집 및 히스토리 치환"

#: ../Doc/tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current "
"input line and history substitution, similar to facilities found in the "
"Korn shell and the GNU Bash shell.  This is implemented using the `GNU "
"Readline`_ library, which supports various styles of editing.  This "
"library has its own documentation which we won't duplicate here."
msgstr ""
"일부 파이썬 인터프리터 버전은 Korn 셸 및 GNU Bash 셸에 있는 기능과 유사하게 현재 입력 줄 편집 및 히스토리 치환을 "
"지원합니다. 이는 다양한 스타일의 편집을 지원하는 `GNU Readline`_ 라이브러리를 사용하여 구현됩니다. 이 라이브러리에는 자체 "
"설명서가 있고, 여기에서 반복하지는 않습니다."

#: ../Doc/tutorial/interactive.rst:17
msgid "Tab Completion and History Editing"
msgstr "탭 완성 및 히스토리 편집"

#: ../Doc/tutorial/interactive.rst:19
msgid ""
"Completion of variable and module names is :ref:`automatically enabled "
"<rlcompleter-config>` at interpreter startup so that the :kbd:`Tab` key "
"invokes the completion function; it looks at Python statement names, the "
"current local variables, and the available module names.  For dotted "
"expressions such as ``string.a``, it will evaluate the expression up to "
"the final ``'.'`` and then suggest completions from the attributes of the"
" resulting object.  Note that this may execute application-defined code "
"if an object with a :meth:`__getattr__` method is part of the expression."
"  The default configuration also saves your history into a file named "
":file:`.python_history` in your user directory. The history will be "
"available again during the next interactive interpreter session."
msgstr ""
"변수와 모듈 이름의 완성은 인터프리터 시작 시 :ref:`자동으로 활성화 <rlcompleter-config>` 되어서 "
":kbd:`Tab` 키가 완료 기능을 호출합니다; 파이썬 명령문 이름, 현재 지역 변수 및 사용 가능한 모듈 이름을 찾습니다. "
"``string.a`` 와 같은 점으로 구분된 표현식의 경우, 표현식을 마지막 ``'.'`` 까지 값을 구한 다음, 결과 객체의 "
"어트리뷰트로 완성을 제안합니다. :meth:`__getattr__` 메서드를 가진 객체가 표현식의 일부면 응용 프로그램이 정의한 코드를 "
"실행할 수 있음에 주의해야 합니다. 기본 설정은 사용자 디렉터리에 :file:`.python_history` 라는 파일로 히스토리를 "
"저장합니다. 다음 대화형 인터프리터 세션에서 히스토리를 다시 사용할 수 있습니다."

#: ../Doc/tutorial/interactive.rst:36
msgid "Alternatives to the Interactive Interpreter"
msgstr "대화형 인터프리터 대안"

#: ../Doc/tutorial/interactive.rst:38
msgid ""
"This facility is an enormous step forward compared to earlier versions of"
" the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows"
" if an indent token is required next).  The completion mechanism might "
"use the interpreter's symbol table.  A command to check (or even suggest)"
" matching parentheses, quotes, etc., would also be useful."
msgstr ""
"이 기능은 이전 버전의 인터프리터에 비교해 엄청난 발전입니다; 그러나, 몇 가지 희망 사항이 남아 있습니다: 이어지는 줄에서 적절한 들여쓰기가"
" 제안된다면 좋을 것입니다 (파서는 다음에 들여쓰기 토큰이 필요한지 알고 있습니다). 완료 메커니즘은 인터프리터의 심볼 테이블을 사용할 수 "
"있습니다. 매치되는 괄호, 따옴표 등을 검사 (또는 제안)하는 명령도 유용할 것입니다."

#: ../Doc/tutorial/interactive.rst:45
msgid ""
"One alternative enhanced interactive interpreter that has been around for"
" quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar "
"enhanced interactive environment is bpython_."
msgstr ""
"꽤 오랫동안 사용됐던 개선된 대화형 인터프리터는 IPython_ 인데, 탭 완성, 객체 탐색 및 고급 히스토리 관리 기능을 갖추고 있습니다."
" 또한, 철저하게 커스터마이즈해서 다른 응용 프로그램에 내장할 수 있습니다. 비슷한 또 다른 개선된 대화형 환경은 bpython_ 입니다."
