# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/tutorial/appetite.rst:5
msgid "Whetting Your Appetite"
msgstr "입맛 돋우기"

#: ../Doc/tutorial/appetite.rst:7
msgid ""
"If you do much work on computers, eventually you find that there's some "
"task you'd like to automate.  For example, you may wish to perform a "
"search-and-replace over a large number of text files, or rename and "
"rearrange a bunch of photo files in a complicated way. Perhaps you'd like"
" to write a small custom database, or a specialized GUI application, or a"
" simple game."
msgstr ""
"여러분이 컴퓨터를 많이 사용한다면, 결국 자동화하고 싶은 작업을 발견하게 됩니다. 예를 들어, 많은 "
"텍스트 파일들을 검색-수정하고 싶거나, 사진 파일들을 복잡한 방법으로 이름을 바꾸거나 재배치하고 "
"싶을 수 있습니다. 어쩌면 자그마한 자신만의 데이터베이스나 GUI 응용 프로그램, 또는 간단한 게임을 만들고 싶을 것입니다."

#: ../Doc/tutorial/appetite.rst:13
msgid ""
"If you're a professional software developer, you may have to work with "
"several C/C++/Java libraries but find the usual write/compile/test/re-"
"compile cycle is too slow.  Perhaps you're writing a test suite for such "
"a library and find writing the testing code a tedious task.  Or maybe "
"you've written a program that could use an extension language, and you "
"don't want to design and implement a whole new language for your "
"application."
msgstr ""
"만약 여러분이 전문 소프트웨어 개발자라면, 여러 C/C++/Java 라이브러리들을 갖고 작업해야만 할 "
"수 있는데, 일반적인 코드작성/컴파일/테스트/재컴파일 순환이 너무 느리다는 것을 깨닫게 됩니다. 어쩌면 "
"그 라이브러리들을 위한 테스트 스위트를 작성하다가, 테스트 코드 작성에 따분해하는 자신을 발견하게 "
"됩니다. 또는 확장 언어를 사용하는 프로그램을 작성했는데, 완전히 새로운 언어 전체를 설계하고 구현하고 "
"싶지 않을 수 있습니다."

#: ../Doc/tutorial/appetite.rst:20
msgid "Python is just the language for you."
msgstr "파이썬은 바로 여러분을 위한 언어입니다."

#: ../Doc/tutorial/appetite.rst:22
msgid ""
"You could write a Unix shell script or Windows batch files for some of "
"these tasks, but shell scripts are best at moving around files and "
"changing text data, not well-suited for GUI applications or games. You "
"could write a C/C++/Java program, but it can take a lot of development "
"time to get even a first-draft program.  Python is simpler to use, "
"available on Windows, Mac OS X, and Unix operating systems, and will help"
" you get the job done more quickly."
msgstr ""
"여러분은 이런 적업들을 유닉스 셸 스크립트나 윈도우 배치 파일을 작성해서 해결할 수도 있습니다. "
"하지만 셸 스크립트는 파일을 이리저리 옮기거나 텍스트 데이터를 변경하는 데는 쓸모 있지만, GUI "
"응용 프로그램이나 게임을 만드는 데는 적합하지 않습니다. C/C++/Java 프로그램을 작성할 수도 있지만, 첫 초벌 "
"프로그램을 만드는데도 막대한 개발 시간이 들어갑니다. 파이썬은 사용하기에 더 간단하고, 윈도우, "
"맥 OS X, 유닉스 운영체제에서 사용할 수 있으며, 더 빨리 작업을 완료할 수 있도록 합니다."

#: ../Doc/tutorial/appetite.rst:29
msgid ""
"Python is simple to use, but it is a real programming language, offering "
"much more structure and support for large programs than shell scripts or "
"batch files can offer.  On the other hand, Python also offers much more "
"error checking than C, and, being a *very-high-level language*, it has "
"high-level data types built in, such as flexible arrays and dictionaries."
"  Because of its more general data types Python is applicable to a much "
"larger problem domain than Awk or even Perl, yet many things are at least"
" as easy in Python as in those languages."
msgstr ""
"파이썬은 사용이 간단하지만, 제대로 갖춰진 프로그래밍 언어인데, 셸 스크립트나 배치 파일보다 더 "
"많은 구조를 제공하고 커다란 프로그램을 위한 지원을 제공합니다. 반면에, 파이썬은 C보다 훨씬 많은 "
"에러 검사를 제공하고, 유연한 배열과 딕셔너리같은 고수준의 자료형들을 내장하고 있습니다. 더 일반적인 "
"자료형들 때문에 Awk 나 Perl보다도 더 많은 문제영역에 쓸모가 있는데, 그러면서도 여전히 많은 "
"것들이 적어도 이들 언어를 사용하는 것만큼 파이썬에서도 쉽게 해결할 수 있습니다."

#: ../Doc/tutorial/appetite.rst:37
msgid ""
"Python allows you to split your program into modules that can be reused "
"in other Python programs.  It comes with a large collection of standard "
"modules that you can use as the basis of your programs --- or as examples"
" to start learning to program in Python.  Some of these modules provide "
"things like file I/O, system calls, sockets, and even interfaces to "
"graphical user interface toolkits like Tk."
msgstr ""
"파이썬은 여러분의 프로그램을 여러 모듈로 나눌 수 있도록 하는데, 각 모듈은 다른 파이썬 "
"프로그램에서 재사용할 수 있습니다. 대규모의 표준 모듈들이 따라오는데 여러분의 프로그램 기초로 "
"사용하거나 파이썬 프로그래밍을 배우기 위한 예제로 활용할 수 있습니다. 이 모듈에는 파일 입출력, 시스템 "
"호출, 소켓들이 포함되는데, 심지어 Tk 와 같은 GUI 도구상자에 대한 인터페이스도 들어있습니다."

#: ../Doc/tutorial/appetite.rst:44
msgid ""
"Python is an interpreted language, which can save you considerable time "
"during program development because no compilation and linking is "
"necessary.  The interpreter can be used interactively, which makes it "
"easy to experiment with features of the language, to write throw-away "
"programs, or to test functions during bottom-up program development. It "
"is also a handy desk calculator."
msgstr ""
"파이썬은 인터프리터 언어입니다. 컴파일과 링크 단계가 필요 없으므로 개발 시간을 상당히 단축해줍니다. "
"인터프리터는 대화형으로 사용할 수 있어서, 언어의 기능을 실험하거나, 쓰고 버릴 프로그램을 "
"만들거나, 바닥부터 프로그램을 만들어가는 동안 함수들을 테스트하기 쉽습니다. 간편한 탁상용 계산기이기도 "
"합니다."

#: ../Doc/tutorial/appetite.rst:50
msgid ""
"Python enables programs to be written compactly and readably.  Programs "
"written in Python are typically much shorter than equivalent C,  C++, or "
"Java programs, for several reasons:"
msgstr ""
"파이썬은 간결하고 읽기 쉽게 프로그램을 작성할 수 있도록 합니다. 파이썬 프로그램은 여러 가지 이유로 "
"같은 기능의 C, C++, Java 프로그램들에 비교해 간결합니다:"

#: ../Doc/tutorial/appetite.rst:54
msgid ""
"the high-level data types allow you to express complex operations in a "
"single statement;"
msgstr ""
"고수준의 자료형 때문에 복잡한 연산을 한 문장으로 표현할 수 있습니다;"

#: ../Doc/tutorial/appetite.rst:57
msgid ""
"statement grouping is done by indentation instead of beginning and ending"
" brackets;"
msgstr ""
"문장의 묶음은 괄호 대신에 들여쓰기를 통해 이루어집니다;"

#: ../Doc/tutorial/appetite.rst:60
msgid "no variable or argument declarations are necessary."
msgstr "변수나 인자의 선언이 필요 없다."

#: ../Doc/tutorial/appetite.rst:62
msgid ""
"Python is *extensible*: if you know how to program in C it is easy to add"
" a new built-in function or module to the interpreter, either to perform "
"critical operations at maximum speed, or to link Python programs to "
"libraries that may only be available in binary form (such as a vendor-"
"specific graphics library). Once you are really hooked, you can link the "
"Python interpreter into an application written in C and use it as an "
"extension or command language for that application."
msgstr ""
"파이썬은 *확장 가능* 하다: C로 프로그램하는 법을 안다면, 인터프리터에 새로운 내장 함수나 자료형을 "
"추가해서, 핵심 연산을 최대 속도로 수행하거나 바이너리 형태로만 제공되는 라이브러리(가령 업체가 "
"제공하는 그래픽스 라이브러리)에 파이썬 프로그램을 연결할 수 있습니다. 진짜 파이썬에 매료되었다면, C로 "
"만든 응용 프로그램에 파이썬 인터프리터를 연결하여 그 응용 프로그램의 확장이나 명령 언어로 사용할 수 있습니다."

#: ../Doc/tutorial/appetite.rst:70
msgid ""
"By the way, the language is named after the BBC show \"Monty Python's "
"Flying Circus\" and has nothing to do with reptiles.  Making references "
"to Monty Python skits in documentation is not only allowed, it is "
"encouraged!"
msgstr ""
"파이썬 이라는 이름은 \"Monty Python's Flying Circus\"라는 BBC 쇼에서 따온 것이고, "
"파충류와는 아무런 관련이 없습니다. 문서에서 Monty Python의 농담을 인용하는 것은 허락된 것일 뿐만 아니라, 권장되고 있습니다."

#: ../Doc/tutorial/appetite.rst:74
msgid ""
"Now that you are all excited about Python, you'll want to examine it in "
"some more detail.  Since the best way to learn a language is to use it, "
"the tutorial invites you to play with the Python interpreter as you read."
msgstr ""
"이제 여러분은 파이썬에 한껏 흥분한 상태고 좀 더 자세히 들여다보길 원할 것입니다. 언어를 배우는 가장 "
"좋은 방법은 사용하는 것이기 때문에, 이 학습서를 읽으면서 직접 파이썬 인터프리터를 만져볼 것을 권합니다."

#: ../Doc/tutorial/appetite.rst:78
msgid ""
"In the next chapter, the mechanics of using the interpreter are "
"explained.  This is rather mundane information, but essential for trying "
"out the examples shown later."
msgstr ""
"다음 장에서, 인터프리터를 사용하는 방법을 설명합니다. 이것은 약간 지루할 수도 있는 정보지만, "
"이후에 나오는 예제들을 실행하기 위해서는 꼭 필요합니다."

#: ../Doc/tutorial/appetite.rst:82
msgid ""
"The rest of the tutorial introduces various features of the Python "
"language and system through examples, beginning with simple expressions, "
"statements and data types, through functions and modules, and finally "
"touching upon advanced concepts like exceptions and user-defined classes."
msgstr ""
"자습서의 나머지는 파이썬 언어와 시스템의 여러 기능을 예제를 통해 소개합니다. 간단한 표현식, 문장, "
"자료형에서 출발해서 함수와 모듈을 거쳐, 마지막으로 예외와 사용자 정의 클래스와 같은 고급 개념들을 "
"다룹니다."

