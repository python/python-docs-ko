# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-30 09:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr ""

#: ../Doc/c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and "
":c:func:`PyObject_DelItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides mapping protocol or supports slicing,"
" and ``0`` otherwise.  Note that it returns ``1`` for Python classes with"
" a :meth:`__getitem__` method since in general case it is impossible to "
"determine what the type of keys it supports.  This function always "
"succeeds."
msgstr ""

#: ../Doc/c-api/mapping.rst:26
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on "
"failure. This is equivalent to the Python expression ``len(o)``."
msgstr ""

#: ../Doc/c-api/mapping.rst:32
msgid ""
"Return element of *o* corresponding to the string *key* or *NULL* on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:39
msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. "
"See also :c:func:`PyObject_SetItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:46
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return "
"``-1`` on failure.  This is equivalent to the Python statement ``del "
"o[key]``. This is an alias of :c:func:`PyObject_DelItem`."
msgstr ""

#: ../Doc/c-api/mapping.rst:53
msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return "
"``-1`` on failure.  This is equivalent to the Python statement ``del "
"o[key]``."
msgstr ""

#: ../Doc/c-api/mapping.rst:59 ../Doc/c-api/mapping.rst:66
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise."
" This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""

#: ../Doc/c-api/mapping.rst:73
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"*NULL*."
msgstr ""

#: ../Doc/c-api/mapping.rst:76 ../Doc/c-api/mapping.rst:85
#: ../Doc/c-api/mapping.rst:94
msgid "Previously, the function returned a list or a tuple."
msgstr ""

#: ../Doc/c-api/mapping.rst:82
msgid ""
"On success, return a list of the values in object *o*.  On failure, "
"return *NULL*."
msgstr ""

#: ../Doc/c-api/mapping.rst:91
msgid ""
"On success, return a list of the items in object *o*, where each item is "
"a tuple containing a key-value pair.  On failure, return *NULL*."
msgstr ""

#~ msgid ""
#~ "Return ``1`` if the object provides "
#~ "mapping protocol, and ``0`` otherwise.  "
#~ "This function always succeeds."
#~ msgstr ""

#~ msgid ""
#~ "Returns the number of keys in "
#~ "object *o* on success, and ``-1`` "
#~ "on failure.  For objects that do "
#~ "not provide mapping protocol, this is"
#~ " equivalent to the Python expression "
#~ "``len(o)``."
#~ msgstr ""

#~ msgid ""
#~ "Remove the mapping for object *key* "
#~ "from the object *o*. Return ``-1`` "
#~ "on failure.  This is equivalent to "
#~ "the Python statement ``del o[key]``."
#~ msgstr ""

#~ msgid ""
#~ "On success, return ``1`` if the "
#~ "mapping object has the key *key* "
#~ "and ``0`` otherwise.  This is equivalent"
#~ " to the Python expression ``key in"
#~ " o``. This function always succeeds."
#~ msgstr ""

#~ msgid ""
#~ "Return ``1`` if the mapping object "
#~ "has the key *key* and ``0`` "
#~ "otherwise.  This is equivalent to the"
#~ " Python expression ``key in o``.  "
#~ "This function always succeeds."
#~ msgstr ""

#~ msgid ""
#~ "Return element of *o* corresponding to"
#~ " the object *key* or *NULL* on "
#~ "failure. This is the equivalent of "
#~ "the Python expression ``o[key]``."
#~ msgstr ""

#~ msgid ""
#~ "Map the object *key* to the value"
#~ " *v* in object *o*. Returns ``-1``"
#~ " on failure. This is the equivalent"
#~ " of the Python statement ``o[key] ="
#~ " v``."
#~ msgstr ""

#~ msgid ""
#~ "On success, return a list or tuple"
#~ " of the keys in object *o*.  On"
#~ " failure, return *NULL*."
#~ msgstr ""

#~ msgid ""
#~ "On success, return a list or tuple"
#~ " of the values in object *o*.  "
#~ "On failure, return *NULL*."
#~ msgstr ""

#~ msgid ""
#~ "On success, return a list or tuple"
#~ " of the items in object *o*, "
#~ "where each item is a tuple "
#~ "containing a key-value pair.  On "
#~ "failure, return *NULL*."
#~ msgstr ""

