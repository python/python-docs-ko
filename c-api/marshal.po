# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/c-api/marshal.rst:6
msgid "Data marshalling support"
msgstr ""

#: ../Doc/c-api/marshal.rst:8
msgid ""
"These routines allow C code to work with serialized objects using the "
"same data format as the :mod:`marshal` module.  There are functions to "
"write data into the serialization format, and additional functions that "
"can be used to read the data back.  Files used to store marshalled data "
"must be opened in binary mode."
msgstr ""

#: ../Doc/c-api/marshal.rst:14
msgid "Numeric values are stored with the least significant byte first."
msgstr ""

#: ../Doc/c-api/marshal.rst:16
msgid ""
"The module supports two versions of the data format: version 0 is the "
"historical version, version 1 shares interned strings in the file, and "
"upon unmarshalling.  Version 2 uses a binary format for floating point "
"numbers. *Py_MARSHAL_VERSION* indicates the current file format "
"(currently 2)."
msgstr ""

#: ../Doc/c-api/marshal.rst:24
msgid ""
"Marshal a :c:type:`long` integer, *value*, to *file*.  This will only "
"write the least-significant 32 bits of *value*; regardless of the size of"
" the native :c:type:`long` type.  *version* indicates the file format."
msgstr ""

#: ../Doc/c-api/marshal.rst:31
msgid ""
"Marshal a Python object, *value*, to *file*. *version* indicates the file"
" format."
msgstr ""

#: ../Doc/c-api/marshal.rst:37
msgid ""
"Return a bytes object containing the marshalled representation of "
"*value*. *version* indicates the file format."
msgstr ""

#: ../Doc/c-api/marshal.rst:41
msgid "The following functions allow marshalled values to be read back in."
msgstr ""

#: ../Doc/c-api/marshal.rst:43
msgid ""
"XXX What about error detection?  It appears that reading past the end of "
"the file will always result in a negative numeric value (where that's "
"relevant), but it's not clear that negative values won't be handled "
"properly when there's no error.  What's the right way to tell? Should "
"only non-negative values be written using these routines?"
msgstr ""

#: ../Doc/c-api/marshal.rst:52
msgid ""
"Return a C :c:type:`long` from the data stream in a :c:type:`FILE\\*` "
"opened for reading.  Only a 32-bit value can be read in using this "
"function, regardless of the native size of :c:type:`long`."
msgstr ""

#: ../Doc/c-api/marshal.rst:56 ../Doc/c-api/marshal.rst:65
msgid "On error, raise an exception and return ``-1``."
msgstr ""

#: ../Doc/c-api/marshal.rst:61
msgid ""
"Return a C :c:type:`short` from the data stream in a :c:type:`FILE\\*` "
"opened for reading.  Only a 16-bit value can be read in using this "
"function, regardless of the native size of :c:type:`short`."
msgstr ""

#: ../Doc/c-api/marshal.rst:70
msgid ""
"Return a Python object from the data stream in a :c:type:`FILE\\*` opened"
" for reading."
msgstr ""

#: ../Doc/c-api/marshal.rst:73 ../Doc/c-api/marshal.rst:87
#: ../Doc/c-api/marshal.rst:96
msgid ""
"On error, sets the appropriate exception (:exc:`EOFError` or "
":exc:`TypeError`) and returns *NULL*."
msgstr ""

#: ../Doc/c-api/marshal.rst:79
msgid ""
"Return a Python object from the data stream in a :c:type:`FILE\\*` opened"
" for reading.  Unlike :c:func:`PyMarshal_ReadObjectFromFile`, this "
"function assumes that no further objects will be read from the file, "
"allowing it to aggressively load file data into memory so that the de-"
"serialization can operate from data in memory rather than reading a byte "
"at a time from the file.  Only use these variant if you are certain that "
"you won't be reading anything else from the file."
msgstr ""

#: ../Doc/c-api/marshal.rst:93
msgid ""
"Return a Python object from the data stream in a byte buffer containing "
"*len* bytes pointed to by *data*."
msgstr ""

