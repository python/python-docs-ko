# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-30 09:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/installing/index.rst:7
msgid "Installing Python Modules"
msgstr ""

#: ../Doc/installing/index.rst
msgid "Email"
msgstr ""

#: ../Doc/installing/index.rst:9
msgid "distutils-sig@python.org"
msgstr ""

#: ../Doc/installing/index.rst:11
msgid ""
"As a popular open source development project, Python has an active "
"supporting community of contributors and users that also make their "
"software available for other Python developers to use under open source "
"license terms."
msgstr ""

#: ../Doc/installing/index.rst:15
msgid ""
"This allows Python users to share and collaborate effectively, benefiting"
" from the solutions others have already created to common (and sometimes "
"even rare!) problems, as well as potentially contributing their own "
"solutions to the common pool."
msgstr ""

#: ../Doc/installing/index.rst:20
msgid ""
"This guide covers the installation part of the process. For a guide to "
"creating and sharing your own Python projects, refer to the "
":ref:`distribution guide <distributing-index>`."
msgstr ""

#: ../Doc/installing/index.rst:26
msgid ""
"For corporate and other institutional users, be aware that many "
"organisations have their own policies around using and contributing to "
"open source software. Please take such policies into account when making "
"use of the distribution and installation tools provided with Python."
msgstr ""

#: ../Doc/installing/index.rst:33
msgid "Key terms"
msgstr ""

#: ../Doc/installing/index.rst:35
msgid ""
"``pip`` is the preferred installer program. Starting with Python 3.4, it "
"is included by default with the Python binary installers."
msgstr ""

#: ../Doc/installing/index.rst:37
msgid ""
"A *virtual environment* is a semi-isolated Python environment that allows"
" packages to be installed for use by a particular application, rather "
"than being installed system wide."
msgstr ""

#: ../Doc/installing/index.rst:40
msgid ""
"``venv`` is the standard tool for creating virtual environments, and has "
"been part of Python since Python 3.3. Starting with Python 3.4, it "
"defaults to installing ``pip`` into all created virtual environments."
msgstr ""

#: ../Doc/installing/index.rst:43
msgid ""
"``virtualenv`` is a third party alternative (and predecessor) to "
"``venv``. It allows virtual environments to be used on versions of Python"
" prior to 3.4, which either don't provide ``venv`` at all, or aren't able"
" to automatically install ``pip`` into created environments."
msgstr ""

#: ../Doc/installing/index.rst:47
msgid ""
"The `Python Packaging Index <https://pypi.org>`__ is a public repository "
"of open source licensed packages made available for use by other Python "
"users."
msgstr ""

#: ../Doc/installing/index.rst:50
msgid ""
"the `Python Packaging Authority <https://www.pypa.io/>`__ are the group "
"of developers and documentation authors responsible for the maintenance "
"and evolution of the standard packaging tools and the associated metadata"
" and file format standards. They maintain a variety of tools, "
"documentation, and issue trackers on both `GitHub "
"<https://github.com/pypa>`__ and `BitBucket "
"<https://bitbucket.org/pypa/>`__."
msgstr ""

#: ../Doc/installing/index.rst:57
msgid ""
"``distutils`` is the original build and distribution system first added "
"to the Python standard library in 1998. While direct use of ``distutils``"
" is being phased out, it still laid the foundation for the current "
"packaging and distribution infrastructure, and it not only remains part "
"of the standard library, but its name lives on in other ways (such as the"
" name of the mailing list used to coordinate Python packaging standards "
"development)."
msgstr ""

#: ../Doc/installing/index.rst:65
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for"
" Python 3.3 and 3.4, and is `deprecated in Python 3.6 "
"<https://docs.python.org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""

#: ../Doc/installing/index.rst:70
msgid "The use of ``venv`` is now recommended for creating virtual environments."
msgstr ""

#: ../Doc/installing/index.rst:75
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-"
"environments>`__"
msgstr ""

#: ../Doc/installing/index.rst:80
msgid "Basic usage"
msgstr ""

#: ../Doc/installing/index.rst:82
msgid ""
"The standard packaging tools are all designed to be used from the command"
" line."
msgstr ""

#: ../Doc/installing/index.rst:85
msgid ""
"The following command will install the latest version of a module and its"
" dependencies from the Python Packaging Index::"
msgstr ""

#: ../Doc/installing/index.rst:92
msgid ""
"For POSIX users (including Mac OS X and Linux users), the examples in "
"this guide assume the use of a :term:`virtual environment`."
msgstr ""

#: ../Doc/installing/index.rst:95
msgid ""
"For Windows users, the examples in this guide assume that the option to "
"adjust the system PATH environment variable was selected when installing "
"Python."
msgstr ""

#: ../Doc/installing/index.rst:99
msgid ""
"It's also possible to specify an exact or minimum version directly on the"
" command line. When using comparator operators such as ``>``, ``<`` or "
"some other special character which get interpreted by shell, the package "
"name and the version should be enclosed within double quotes::"
msgstr ""

#: ../Doc/installing/index.rst:107
msgid ""
"Normally, if a suitable module is already installed, attempting to "
"install it again will have no effect. Upgrading existing modules must be "
"requested explicitly::"
msgstr ""

#: ../Doc/installing/index.rst:113
msgid ""
"More information and resources regarding ``pip`` and its capabilities can"
" be found in the `Python Packaging User Guide "
"<https://packaging.python.org>`__."
msgstr ""

#: ../Doc/installing/index.rst:116
msgid ""
"Creation of virtual environments is done through the :mod:`venv` module. "
"Installing packages into an active virtual environment uses the commands "
"shown above."
msgstr ""

#: ../Doc/installing/index.rst:122
msgid ""
"`Python Packaging User Guide: Installing Python Distribution Packages "
"<https://packaging.python.org/installing/>`__"
msgstr ""

#: ../Doc/installing/index.rst:127
msgid "How do I ...?"
msgstr ""

#: ../Doc/installing/index.rst:129
msgid "These are quick answers or links for some common tasks."
msgstr ""

#: ../Doc/installing/index.rst:132
msgid "... install ``pip`` in versions of Python prior to Python 3.4?"
msgstr ""

#: ../Doc/installing/index.rst:134
msgid ""
"Python only started bundling ``pip`` with Python 3.4. For earlier "
"versions, ``pip`` needs to be \"bootstrapped\" as described in the Python"
" Packaging User Guide."
msgstr ""

#: ../Doc/installing/index.rst:140
msgid ""
"`Python Packaging User Guide: Requirements for Installing Packages "
"<https://packaging.python.org/installing/#requirements-for-installing-"
"packages>`__"
msgstr ""

#: ../Doc/installing/index.rst:147
msgid "... install packages just for the current user?"
msgstr ""

#: ../Doc/installing/index.rst:149
msgid ""
"Passing the ``--user`` option to ``python -m pip install`` will install a"
" package just for the current user, rather than for all users of the "
"system."
msgstr ""

#: ../Doc/installing/index.rst:154
msgid "... install scientific Python packages?"
msgstr ""

#: ../Doc/installing/index.rst:156
msgid ""
"A number of scientific Python packages have complex binary dependencies, "
"and aren't currently easy to install using ``pip`` directly. At this "
"point in time, it will often be easier for users to install these "
"packages by `other means <https://packaging.python.org/science/>`__ "
"rather than attempting to install them with ``pip``."
msgstr ""

#: ../Doc/installing/index.rst:164
msgid ""
"`Python Packaging User Guide: Installing Scientific Packages "
"<https://packaging.python.org/science/>`__"
msgstr ""

#: ../Doc/installing/index.rst:169
msgid "... work with multiple versions of Python installed in parallel?"
msgstr ""

#: ../Doc/installing/index.rst:171
msgid ""
"On Linux, Mac OS X, and other POSIX systems, use the versioned Python "
"commands in combination with the ``-m`` switch to run the appropriate "
"copy of ``pip``::"
msgstr ""

#: ../Doc/installing/index.rst:180
msgid "Appropriately versioned ``pip`` commands may also be available."
msgstr ""

#: ../Doc/installing/index.rst:182
msgid ""
"On Windows, use the ``py`` Python launcher in combination with the ``-m``"
" switch::"
msgstr ""

#: ../Doc/installing/index.rst:199
msgid "Common installation issues"
msgstr ""

#: ../Doc/installing/index.rst:202
msgid "Installing into the system Python on Linux"
msgstr ""

#: ../Doc/installing/index.rst:204
msgid ""
"On Linux systems, a Python installation will typically be included as "
"part of the distribution. Installing into this Python installation "
"requires root access to the system, and may interfere with the operation "
"of the system package manager and other components of the system if a "
"component is unexpectedly upgraded using ``pip``."
msgstr ""

#: ../Doc/installing/index.rst:210
msgid ""
"On such systems, it is often better to use a virtual environment or a "
"per-user installation when installing packages with ``pip``."
msgstr ""

#: ../Doc/installing/index.rst:215
msgid "Pip not installed"
msgstr ""

#: ../Doc/installing/index.rst:217
msgid ""
"It is possible that ``pip`` does not get installed by default. One "
"potential fix is::"
msgstr ""

#: ../Doc/installing/index.rst:221
msgid ""
"There are also additional resources for `installing pip. "
"<https://packaging.python.org/tutorials/installing-packages/#install-pip-"
"setuptools-and-wheel>`__"
msgstr ""

#: ../Doc/installing/index.rst:226
msgid "Installing binary extensions"
msgstr ""

#: ../Doc/installing/index.rst:228
msgid ""
"Python has typically relied heavily on source based distribution, with "
"end users being expected to compile extension modules from source as part"
" of the installation process."
msgstr ""

#: ../Doc/installing/index.rst:232
msgid ""
"With the introduction of support for the binary ``wheel`` format, and the"
" ability to publish wheels for at least Windows and Mac OS X through the "
"Python Packaging Index, this problem is expected to diminish over time, "
"as users are more regularly able to install pre-built extensions rather "
"than needing to build them themselves."
msgstr ""

#: ../Doc/installing/index.rst:238
msgid ""
"Some of the solutions for installing `scientific software "
"<https://packaging.python.org/science/>`__ that are not yet available as "
"pre-built ``wheel`` files may also help with obtaining other binary "
"extensions without needing to build them locally."
msgstr ""

#: ../Doc/installing/index.rst:245
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/extensions/>`__"
msgstr ""

#~ msgid ""
#~ "The `Python Packaging Index "
#~ "<https://pypi.python.org/pypi>`__ is a public "
#~ "repository of open source licensed "
#~ "packages made available for use by "
#~ "other Python users."
#~ msgstr ""

#~ msgid ""
#~ "the `Python Packaging Authority "
#~ "<https://www.pypa.io/en/latest/>`__ are the group"
#~ " of developers and documentation authors"
#~ " responsible for the maintenance and "
#~ "evolution of the standard packaging "
#~ "tools and the associated metadata and"
#~ " file format standards. They maintain "
#~ "a variety of tools, documentation, and"
#~ " issue trackers on both `GitHub "
#~ "<https://github.com/pypa>`__ and `BitBucket "
#~ "<https://bitbucket.org/pypa/>`__."
#~ msgstr ""

