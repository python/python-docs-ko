# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/intro.rst:5
msgid "Introduction"
msgstr "소개"

#: ../Doc/library/intro.rst:7
msgid "The \"Python library\" contains several different kinds of components."
msgstr "\"파이썬 라이브러리\"에는 여러 가지 구성 요소가 포함되어 있습니다."

#: ../Doc/library/intro.rst:9
msgid ""
"It contains data types that would normally be considered part of the "
"\"core\" of a language, such as numbers and lists.  For these types, the "
"Python language core defines the form of literals and places some "
"constraints on their semantics, but does not fully define the semantics."
"  (On the other hand, the language core does define syntactic properties "
"like the spelling and priorities of operators.)"
msgstr ""
"여기에는 일반적으로 숫자 및 리스트와 같이 언어의 \"핵심\" 부분으로 간주하는 데이터형이 포함됩니다. 이러한 형의 경우, 파이썬 언어 "
"핵심은 리터럴의 형식을 정의하고 그 의미에 몇 가지 제약을 가하지만, 의미를 완전히 정의하지는 않습니다. (반면에, 언어 핵심은 연산자의 "
"철자법과 우선순위와 같은 문법적 속성을 정의합니다.)"

#: ../Doc/library/intro.rst:15
msgid ""
"The library also contains built-in functions and exceptions --- objects "
"that can be used by all Python code without the need of an "
":keyword:`import` statement. Some of these are defined by the core "
"language, but many are not essential for the core semantics and are only "
"described here."
msgstr ""
"라이브러리는 또한 내장 함수와 예외를 포함합니다 --- :keyword:`import` 문을 쓰지 않고도 모든 파이썬 코드에서 사용할 수 "
"있는 객체들입니다. 이들 중 일부는 언어 핵심에 의해 정의되지만, 핵심 의미에 필수적인 것은 아니며 여기에서 설명합니다."

#: ../Doc/library/intro.rst:20
msgid ""
"The bulk of the library, however, consists of a collection of modules. "
"There are many ways to dissect this collection.  Some modules are written"
" in C and built in to the Python interpreter; others are written in "
"Python and imported in source form.  Some modules provide interfaces that"
" are highly specific to Python, like printing a stack trace; some provide"
" interfaces that are specific to particular operating systems, such as "
"access to specific hardware; others provide interfaces that are specific "
"to a particular application domain, like the World Wide Web. Some modules"
" are available in all versions and ports of Python; others are only "
"available when the underlying system supports or requires them; yet "
"others are available only when a particular configuration option was "
"chosen at the time when Python was compiled and installed."
msgstr ""
"그러나 라이브러리 대부분은 모듈 컬렉션으로 구성됩니다. 이 컬렉션을 나누는 데는 여러 가지 방법이 있습니다. 일부 모듈은 C로 작성되고 파이썬"
" 인터프리터에 내장되어 있습니다; 다른 것은 파이썬으로 작성되고 소스 형식으로 임포트 됩니다. 일부 모듈은 스택 추적 인쇄와 같이 파이썬에 매우"
" 특정한 인터페이스를 제공합니다; 일부는 특정 하드웨어에 대한 액세스와 같이 운영 체제에 특정한 인터페이스를 제공합니다; 다른 것은 월드 "
"와이드 웹과 같은 응용 프로그램 영역에 특정한 인터페이스를 제공합니다. 일부 모듈은 파이썬의 모든 버전과 이식에서 사용할 수 있습니다; 다른 "
"것은 하위 시스템이 지원하거나 요구할 때만 사용할 수 있습니다; 그러나 다른 것들은 파이썬이 컴파일되고 설치될 때 특정 설정 옵션이 "
"선택되었을 때만 사용할 수 있습니다."

#: ../Doc/library/intro.rst:32
msgid ""
"This manual is organized \"from the inside out:\" it first describes the "
"built-in functions, data types and exceptions, and finally the modules, "
"grouped in chapters of related modules."
msgstr ""
"이 설명서는 \"안쪽에서부터 밖으로\" 구성되어 있습니다. 먼저 내장 함수, 데이터형 및 예외, 마지막으로 관련 모듈의 장으로 그룹화된 "
"모듈들을 설명합니다."

#: ../Doc/library/intro.rst:36
msgid ""
"This means that if you start reading this manual from the start, and skip"
" to the next chapter when you get bored, you will get a reasonable "
"overview of the available modules and application areas that are "
"supported by the Python library.  Of course, you don't *have* to read it "
"like a novel --- you can also browse the table of contents (in front of "
"the manual), or look for a specific function, module or term in the index"
" (in the back).  And finally, if you enjoy learning about random "
"subjects, you choose a random page number (see module :mod:`random`) and "
"read a section or two.  Regardless of the order in which you read the "
"sections of this manual, it helps to start with chapter :ref:`built-in-"
"funcs`, as the remainder of the manual assumes familiarity with this "
"material."
msgstr ""
"즉, 처음부터 이 설명서를 읽고, 지루할 때 다음 장으로 건너뛰면, 파이썬 라이브러리가 지원하는 사용 가능한 모듈과 응용 프로그램 영역에"
" 대한 적당한 개요를 얻게 됩니다. 물론 소설처럼 읽을 필요는 없습니다. (설명서 앞에 있는) 목차를 검색하거나, (뒤에 있는) 색인에서 특정"
" 함수, 모듈 또는 용어를 찾을 수도 있습니다. 그리고 마지막으로, 무작위 주제에 대해 배우는 것을 즐긴다면, 임의의 페이지 번호 (모듈 "
":mod:`random` 참조)를 선택하고 한두 섹션을 읽으면 됩니다. 이 설명서의 섹션을 읽는 순서와 관계없이, :ref:`built-"
"in-funcs` 장에서 시작하는 것이 도움이 되는데, 설명서의 나머지 부분은 이 내용에 익숙하다고 가정하기 때문입니다."

#: ../Doc/library/intro.rst:48
msgid "Let the show begin!"
msgstr "쇼를 시작합시다!"
