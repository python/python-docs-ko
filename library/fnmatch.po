# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/fnmatch.rst:2
msgid ":mod:`fnmatch` --- Unix filename pattern matching"
msgstr ""

#: ../Doc/library/fnmatch.rst:7
msgid "**Source code:** :source:`Lib/fnmatch.py`"
msgstr ""

#: ../Doc/library/fnmatch.rst:15
msgid ""
"This module provides support for Unix shell-style wildcards, which are "
"*not* the same as regular expressions (which are documented in the "
":mod:`re` module).  The special characters used in shell-style wildcards "
"are:"
msgstr ""

#: ../Doc/library/fnmatch.rst:20
msgid "Pattern"
msgstr ""

#: ../Doc/library/fnmatch.rst:20
msgid "Meaning"
msgstr ""

#: ../Doc/library/fnmatch.rst:22
msgid "``*``"
msgstr ""

#: ../Doc/library/fnmatch.rst:22
msgid "matches everything"
msgstr ""

#: ../Doc/library/fnmatch.rst:24
msgid "``?``"
msgstr ""

#: ../Doc/library/fnmatch.rst:24
msgid "matches any single character"
msgstr ""

#: ../Doc/library/fnmatch.rst:26
msgid "``[seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:26
msgid "matches any character in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:28
msgid "``[!seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:28
msgid "matches any character not in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:31
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""

#: ../Doc/library/fnmatch.rst:36
msgid ""
"Note that the filename separator (``'/'`` on Unix) is *not* special to "
"this module.  See module :mod:`glob` for pathname expansion (:mod:`glob` "
"uses :func:`fnmatch` to match pathname segments).  Similarly, filenames "
"starting with a period are not special for this module, and are matched "
"by the ``*`` and ``?`` patterns."
msgstr ""

#: ../Doc/library/fnmatch.rst:45
msgid ""
"Test whether the *filename* string matches the *pattern* string, "
"returning :const:`True` or :const:`False`.  Both parameters are case-"
"normalized using :func:`os.path.normcase`. :func:`fnmatchcase` can be "
"used to perform a case-sensitive comparison, regardless of whether that's"
" standard for the operating system."
msgstr ""

#: ../Doc/library/fnmatch.rst:51
msgid ""
"This example will print all file names in the current directory with the "
"extension ``.txt``::"
msgstr ""

#: ../Doc/library/fnmatch.rst:64
msgid ""
"Test whether *filename* matches *pattern*, returning :const:`True` or "
":const:`False`; the comparison is case-sensitive and does not apply "
":func:`os.path.normcase`."
msgstr ""

#: ../Doc/library/fnmatch.rst:71
msgid ""
"Return the subset of the list of *names* that match *pattern*. It is the "
"same as ``[n for n in names if fnmatch(n, pattern)]``, but implemented "
"more efficiently."
msgstr ""

#: ../Doc/library/fnmatch.rst:77
msgid ""
"Return the shell-style *pattern* converted to a regular expression for "
"using with :func:`re.match`."
msgstr ""

#: ../Doc/library/fnmatch.rst:80
msgid "Example:"
msgstr ""

#: ../Doc/library/fnmatch.rst:94
msgid "Module :mod:`glob`"
msgstr ""

#: ../Doc/library/fnmatch.rst:95
msgid "Unix shell-style path expansion."
msgstr ""

