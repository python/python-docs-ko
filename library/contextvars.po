# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-30 09:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Dong-gweon Oh <flowdas@gmail.com>\n"
"Language-Team: Korean (https://python.flowdas.com)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/contextvars.rst:2
msgid ":mod:`contextvars` --- Context Variables"
msgstr ":mod:`contextvars` --- 컨텍스트 변수"

#: ../Doc/library/contextvars.rst:11
msgid ""
"This module provides APIs to manage, store, and access context-local "
"state.  The :class:`~contextvars.ContextVar` class is used to declare and"
" work with *Context Variables*.  The :func:`~contextvars.copy_context` "
"function and the :class:`~contextvars.Context` class should be used to "
"manage the current context in asynchronous frameworks."
msgstr ""
"이 모듈은 컨텍스트-로컬 상태를 관리, 저장, 액세스하기 위한 API를 제공합니다. "
":class:`~contextvars.ContextVar` 클래스는 *컨텍스트 변수* 를 선언하고 사용하는 데 쓰입니다. "
":func:`~contextvars.copy_context` 함수와 :class:`~contextvars.Context` 클래스는 비동기"
" 프레임워크에서 현재 컨텍스트를 관리하는 데 사용해야 합니다."

#: ../Doc/library/contextvars.rst:17
msgid ""
"Context managers that have state should use Context Variables instead of "
":func:`threading.local()` to prevent their state from bleeding to other "
"code unexpectedly, when used in concurrent code."
msgstr ""
"상태가 있는 컨텍스트 관리자는 동시성 코드에서 상태가 예기치 않게 다른 코드로 유출되는 것을 방지하기 위해 "
":func:`threading.local()` 대신 컨텍스트 변수를 사용해야 합니다."

#: ../Doc/library/contextvars.rst:21
msgid "See also :pep:`567` for additional details."
msgstr "자세한 내용은 :pep:`567`\\을 참조하십시오."

#: ../Doc/library/contextvars.rst:27
msgid "Context Variables"
msgstr "컨텍스트 변수"

#: ../Doc/library/contextvars.rst:31
msgid "This class is used to declare a new Context Variable, e.g.::"
msgstr "이 클래스는 새로운 컨텍스트 변수를 선언하는 데 사용됩니다. 예::"

#: ../Doc/library/contextvars.rst:35
msgid ""
"The required *name* parameter is used for introspection and debug "
"purposes."
msgstr "필수 *name* 매개 변수는 인트로스팩션 및 디버그 목적으로 사용됩니다."

#: ../Doc/library/contextvars.rst:38
msgid ""
"The optional keyword-only *default* parameter is returned by "
":meth:`ContextVar.get` when no value for the variable is found in the "
"current context."
msgstr ""
"선택적 키워드 전용 *default* 매개 변수는 변수에 대한 값이 현재 컨텍스트에서 발견되지 않으면 "
":meth:`ContextVar.get` 에 의해 반환됩니다."

#: ../Doc/library/contextvars.rst:42
msgid ""
"**Important:** Context Variables should be created at the top module "
"level and never in closures.  :class:`Context` objects hold strong "
"references to context variables which prevents context variables from "
"being properly garbage collected."
msgstr ""
"**중요:** 컨텍스트 변수는 최상위 모듈 수준에서 만들어져야 하고 클로저에서 만들어져서는 안 됩니다. :class:`Context` "
"객체는 컨텍스트 변수에 대해 강한 참조를 유지해서 컨텍스트 변수가 제대로 가비지 수집되지 못하게 합니다."

#: ../Doc/library/contextvars.rst:49
msgid "The name of the variable.  This is a read-only property."
msgstr "변수의 이름. 읽기 전용 프로퍼티입니다."

#: ../Doc/library/contextvars.rst:53
msgid "Return a value for the context variable for the current context."
msgstr "현재 컨텍스트의 컨텍스트 변수에 대한 값을 반환합니다."

#: ../Doc/library/contextvars.rst:55
msgid ""
"If there is no value for the variable in the current context, the method "
"will:"
msgstr "현재 컨텍스트에서 변수에 대한 값이 없는 경우 메서드는:"

#: ../Doc/library/contextvars.rst:58
msgid "return the value of the *default* argument of the method, if provided; or"
msgstr "제공된 경우 메서드의 *default* 인자 값을 반환합니다; 또는"

#: ../Doc/library/contextvars.rst:61
msgid ""
"return the default value for the context variable, if it was created with"
" one; or"
msgstr "생성 시에 제공된 경우, 컨텍스트 변수의 기본값을 반환합니다; 또는"

#: ../Doc/library/contextvars.rst:64
msgid "raise a :exc:`LookupError`."
msgstr ":exc:`LookupError` 를 발생시킵니다."

#: ../Doc/library/contextvars.rst:68
msgid "Call to set a new value for the context variable in the current context."
msgstr "현재 컨텍스트에서 컨텍스트 변수의 새 값을 설정하려면 호출합니다."

#: ../Doc/library/contextvars.rst:71
msgid "The required *value* argument is the new value for the context variable."
msgstr "필수 *value* 인자는 컨텍스트 변수의 새 값입니다."

#: ../Doc/library/contextvars.rst:74
msgid ""
"Returns a :class:`~contextvars.Token` object that can be used to restore "
"the variable to its previous value via the :meth:`ContextVar.reset` "
"method."
msgstr ""
":meth:`ContextVar.reset` 메서드를 통해 변수를 이전 값으로 복원하는 데 사용할 수 있는 "
":class:`~contextvars.Token` 객체를 반환합니다."

#: ../Doc/library/contextvars.rst:80
msgid ""
"Reset the context variable to the value it had before the "
":meth:`ContextVar.set` that created the *token* was used."
msgstr "*token* 을 생성 한 :meth:`ContextVar.set` 이 사용되기 전의 값으로 컨텍스트 변수를 재설정합니다."

#: ../Doc/library/contextvars.rst:83
msgid "For example::"
msgstr "예를 들면::"

#: ../Doc/library/contextvars.rst:97
msgid ""
"*Token* objects are returned by the :meth:`ContextVar.set` method. They "
"can be passed to the :meth:`ContextVar.reset` method to revert the value "
"of the variable to what it was before the corresponding *set*."
msgstr ""
"*Token* 객체는 :meth:`ContextVar.set` 메서드에 의해 반환됩니다. :meth:`ContextVar.reset` "
"메서드에 전달해서 변수의 값을 해당 *set* 이전의 값으로 되돌릴 수 있습니다."

#: ../Doc/library/contextvars.rst:104
msgid ""
"A read-only property.  Points to the :class:`ContextVar` object that "
"created the token."
msgstr "읽기 전용 프로퍼티. 토큰을 생성 한 :class:`ContextVar` 객체를 가리 킵니다."

#: ../Doc/library/contextvars.rst:109
msgid ""
"A read-only property.  Set to the value the variable had before the "
":meth:`ContextVar.set` method call that created the token. It points to "
":attr:`Token.MISSING` is the variable was not set before the call."
msgstr ""
"읽기 전용 프로퍼티. 토큰을 생성 한 :meth:`ContextVar.set` 메서드 호출 전 변수의 값으로 설정됩니다. "
":attr:`Token.MISSING` 은 호출 전에 변수가 설정되지 않았음을 나타냅니다."

#: ../Doc/library/contextvars.rst:116
msgid "A marker object used by :attr:`Token.old_value`."
msgstr ":attr:`Token.old_value` 에 의해 사용되는 표지 객체."

#: ../Doc/library/contextvars.rst:120
msgid "Manual Context Management"
msgstr "수동 컨텍스트 관리"

#: ../Doc/library/contextvars.rst:124
msgid "Returns a copy of the current :class:`~contextvars.Context` object."
msgstr "현재 :class:`~contextvars.Context` 객체의 복사본을 반환합니다."

#: ../Doc/library/contextvars.rst:126
msgid ""
"The following snippet gets a copy of the current context and prints all "
"variables and their values that are set in it::"
msgstr "다음 코드 조각은 현재 컨텍스트의 복사본을 가져와서 모든 변수와 그 변수에 설정된 값을 출력합니다::"

#: ../Doc/library/contextvars.rst:132
msgid ""
"The function has an O(1) complexity, i.e. works equally fast for contexts"
" with a few context variables and for contexts that have a lot of them."
msgstr ""
"이 함수는 O(1) 복잡도를 갖고 있습니다. 즉, 몇 가지 컨텍스트 변수가 있는 컨텍스트와 컨텍스트 변수가 잔뜩 있는 컨텍스트에 대해 "
"똑같이 빠르게 작동합니다."

#: ../Doc/library/contextvars.rst:139
msgid "A mapping of :class:`ContextVars <ContextVar>` to their values."
msgstr ":class:`ContextVars <ContextVar>` 에서 그 값으로의 매핑."

#: ../Doc/library/contextvars.rst:141
msgid ""
"``Context()`` creates an empty context with no values in it. To get a "
"copy of the current context use the :func:`~contextvars.copy_context` "
"function."
msgstr ""
"``Context()`` 는 값이 없는 빈 컨텍스트를 만듭니다. 현재 컨텍스트의 복사본을 얻으려면 "
":func:`~contextvars.copy_context` 함수를 사용하십시오."

#: ../Doc/library/contextvars.rst:145
msgid "Context implements the :class:`collections.abc.Mapping` interface."
msgstr "Context는 :class:`collections.abc.Mapping` 인터페이스를 구현합니다."

#: ../Doc/library/contextvars.rst:149
msgid ""
"Execute ``callable(*args, **kwargs)`` code in the context object the "
"*run* method is called on.  Return the result of the execution or "
"propagate an exception if one occurred."
msgstr ""
"*run* 메서드가 호출된 컨텍스트 객체에서 ``callable(*args, **kwargs)`` 코드를 실행합니다. 실행 결과를 "
"반환하거나 예외가 발생하면 예외를 전파합니다."

#: ../Doc/library/contextvars.rst:153
msgid ""
"Any changes to any context variables that *callable* makes will be "
"contained in the context object::"
msgstr "*callable* 이 만드는 모든 컨텍스트 변수에 대한 변경 사항은 컨텍스트 개체에 포함됩니다::"

#: ../Doc/library/contextvars.rst:182
msgid ""
"The method raises a :exc:`RuntimeError` when called on the same context "
"object from more than one OS thread, or when called recursively."
msgstr ""
"이 메서드는 둘 이상의 OS 스레드에서 같은 컨텍스트 객체에 대해 호출될 때나 재귀적으로 호출될 때 :exc:`RuntimeError` "
"를 발생시킵니다."

#: ../Doc/library/contextvars.rst:188
msgid "Return a shallow copy of the context object."
msgstr "컨텍스트 객체의 얕은 복사본을 반환합니다."

#: ../Doc/library/contextvars.rst:192
msgid ""
"Return ``True`` if the *context* has a value for *var* set; return "
"``False`` otherwise."
msgstr "*context* 에 *var* 의 값이 설정되었으면 ``True`` 를, 그렇지 않으면 `False`\\를 반환합니다."

#: ../Doc/library/contextvars.rst:197
msgid ""
"Return the value of the *var* :class:`ContextVar` variable. If the "
"variable is not set in the context object, a :exc:`KeyError` is raised."
msgstr ""
"*var* :class:`ContextVar` 변수의 값을 돌려줍니다. 컨텍스트 객체에 변수가 설정되어 있지 않으면 "
":exc:`KeyError` 가 발생합니다."

#: ../Doc/library/contextvars.rst:203
msgid ""
"Return the value for *var* if *var* has the value in the context object."
"  Return *default* otherwise.  If *default* is not given, return "
"``None``."
msgstr ""
"컨텍스트 객체에 *var* 의 값이 있으면, *var* 의 값을 돌려줍니다. 그렇지 않으면 *default* 를 반환합니다. "
"*default* 가 주어지지 않으면 ``None`` 을 반환합니다."

#: ../Doc/library/contextvars.rst:209
msgid "Return an iterator over the variables stored in the context object."
msgstr "컨텍스트 객체에 저장된 변수에 대한 이터레이터를 반환합니다."

#: ../Doc/library/contextvars.rst:214
msgid "Return the number of variables set in the context object."
msgstr "컨텍스트 객체에 설정된 변수의 개수를 반환합니다."

#: ../Doc/library/contextvars.rst:218
msgid "Return a list of all variables in the context object."
msgstr "컨텍스트 객체의 모든 변수 목록을 반환합니다."

#: ../Doc/library/contextvars.rst:222
msgid "Return a list of all variables' values in the context object."
msgstr "컨텍스트 객체의 모든 변수의 값 목록을 반환합니다."

#: ../Doc/library/contextvars.rst:227
msgid ""
"Return a list of 2-tuples containing all variables and their values in "
"the context object."
msgstr "컨텍스트 객체에서 모든 변수와 해당 값을 포함하는 2-튜플의 목록을 반환합니다."

#: ../Doc/library/contextvars.rst:232
msgid "asyncio support"
msgstr "asyncio 지원"

#: ../Doc/library/contextvars.rst:234
msgid ""
"Context variables are natively supported in :mod:`asyncio` and are ready "
"to be used without any extra configuration.  For example, here is a "
"simple echo server, that uses a context variable to make the address of a"
" remote client available in the Task that handles that client::"
msgstr ""
"컨텍스트 변수는 :mod:`asyncio` 에서 기본적으로 지원되며 추가 구성없이 사용할 수 있습니다. 예를 들어, 이것은 컨텍스트 "
"변수를 사용하여, 원격 클라이언트의 주소를 해당 클라이언트를 처리하는 Task에서 사용할 수 있도록 하는 간단한 에코 서버입니다::"
