# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2017, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-26 18:49+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.1\n"

#: ../Doc/library/email.iterators.rst:2
msgid ":mod:`email.iterators`: Iterators"
msgstr ""

#: ../Doc/library/email.iterators.rst:7
msgid "**Source code:** :source:`Lib/email/iterators.py`"
msgstr ""

#: ../Doc/library/email.iterators.rst:11
msgid ""
"Iterating over a message object tree is fairly easy with the "
":meth:`Message.walk <email.message.Message.walk>` method.  The "
":mod:`email.iterators` module provides some useful higher level "
"iterations over message object trees."
msgstr ""

#: ../Doc/library/email.iterators.rst:19
msgid ""
"This iterates over all the payloads in all the subparts of *msg*, "
"returning the string payloads line-by-line.  It skips over all the "
"subpart headers, and it skips over any subpart with a payload that isn't "
"a Python string.  This is somewhat equivalent to reading the flat text "
"representation of the message from a file using "
":meth:`~io.TextIOBase.readline`, skipping over all the intervening "
"headers."
msgstr ""

#: ../Doc/library/email.iterators.rst:26
msgid ""
"Optional *decode* is passed through to :meth:`Message.get_payload "
"<email.message.Message.get_payload>`."
msgstr ""

#: ../Doc/library/email.iterators.rst:32
msgid ""
"This iterates over all the subparts of *msg*, returning only those "
"subparts that match the MIME type specified by *maintype* and *subtype*."
msgstr ""

#: ../Doc/library/email.iterators.rst:35
msgid ""
"Note that *subtype* is optional; if omitted, then subpart MIME type "
"matching is done only with the main type.  *maintype* is optional too; it"
" defaults to :mimetype:`text`."
msgstr ""

#: ../Doc/library/email.iterators.rst:39
msgid ""
"Thus, by default :func:`typed_subpart_iterator` returns each subpart that"
" has a MIME type of :mimetype:`text/\\*`."
msgstr ""

#: ../Doc/library/email.iterators.rst:43
msgid ""
"The following function has been added as a useful debugging tool.  It "
"should *not* be considered part of the supported public interface for the"
" package."
msgstr ""

#: ../Doc/library/email.iterators.rst:48
msgid ""
"Prints an indented representation of the content types of the message "
"object structure.  For example:"
msgstr ""

#: ../Doc/library/email.iterators.rst:81
msgid ""
"Optional *fp* is a file-like object to print the output to.  It must be "
"suitable for Python's :func:`print` function.  *level* is used "
"internally. *include_default*, if true, prints the default type as well."
msgstr ""

